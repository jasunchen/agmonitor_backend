from opti import *
from parse import *
from sklearn.metrics import r2_score

#initial time, base load, solar load, powerwall, grid usage, battery charge
def findRange(arr): 
    continuous = False
    ranges = []
    for index, i in enumerate(arr):
        if i == 1:
            if continuous == False:
                continuous = True 
                ranges.append([index, index+1])
        elif len(ranges) != 0 and continuous == True:
            continuous = False
            ranges[-1][-1] = index
    return ranges

def convertIndexToTime(index): #0-96, 0 being 00:00, 96 being 24:00
	if (index == 96):
		return "11:59 PM"

	hours = index // 4
	minutes = (index % 4)*15
	if minutes == 0:
		minutes = "00"

	time = "AM"
	if hours >= 12:
		hours -= 12
		time = "PM"

	if hours == 0:
		hours = 12

	return "{}:{} {}".format(hours, minutes, time)

def scheduleToString(sched):
    # tempSched = [flexibleLoad.id, duration, i]

    return "Charge {} hrs at {}".format(sched[1]/4, convertIndexToTime(sched[2]))

def convertRangeToTimes(arr):
	length = len(arr)
	output = ""
	for index, ele in enumerate(arr):
		if (ele[0] == ele[1]):
			output += convertIndexToTime(ele[0])
		else:
			output += convertIndexToTime(ele[0]) + " to " + convertIndexToTime(ele[1])

		if (index == length - 2):
			output += ", and "
		else: 
			output += ", "

	return output[:-2]

def compareTimes():
    pass

#schedule ["", isOn, timeofday]
#inputs: baseload to test on, flexible load to schedule, schedule of flexible load, initial battery state, solar generation, number of dates
#outputs: utility usage, solar integration 
def checkTime(batterystate, batterySize, baseLoad, solar, shouldCharge, flexibleLoad, day, timeOfDay):
    entire_home_usage = sum(baseLoad) + sum(flexibleLoad)
    entire_solar_gen = sum(solar)

    if shouldCharge:
        for ind, ele in enumerate(flexibleLoad):
            baseLoad[day*96 + timeOfDay + ind] += ele

    energyFlow = computeEnergyFlow(solar, baseLoad)
    costGrid, costRenewableIntegration, excessSolar, excessBattery, utility, temp_battery= computePredictedBatteryChargeAndTotalCost(batterystate, energyFlow, 20, batterySize)
    solarToGrid = sum([item*1000 for item in utility if item >= 0])
    gridUsage = sum([item*-1000 for item in utility if item <= 0])

    return  (gridUsage/entire_home_usage, solarToGrid/entire_solar_gen, baseLoad, temp_battery[-1])

# schedule = [[day, timeOfDay, duration], [day, timeOfDay, duration], ... ]
# flexibleLoad = FLs to charge [ [1000, 1200, ...], [500,500...]]
def checkMonth(batterystate, batterySize, baseLoad, solar, flexibleLoad, schedule, thresholds):
    fl_sum = 0
    solarToGrid = 0
    gridUsage = 0
    util_final = []
    battery_final = []
    tempbatterystate = batterystate*1
    if tempbatterystate is batterystate:
        print("nooooo")
    tempbaseload = baseLoad.copy()


    for i in flexibleLoad:
        fl_sum += sum(i)
    

    for ind, (day, timeOfDay, duration) in enumerate(schedule):
        for i in range(duration):
            if i < len(flexibleLoad[ind]):
                tempbaseload[day*96 + timeOfDay + i] += flexibleLoad[ind][i]

    
    entire_home_usage = sum(tempbaseload)
    entire_solar_gen = sum(solar)
    energyFlow = computeEnergyFlow(solar, tempbaseload)

    # costGrid, costRenewableIntegration, excessSolar, excessBattery, utility, temp_battery= computePredictedBatteryChargeAndTotalCost(batterystate, energyFlow, 20, batterySize)
    # solarToGrid = sum([item*1000 for item in utility if item >= 0])
    # gridUsage = sum([item*-1000 for item in utility if item <= 0])

    for index, threshold in enumerate(thresholds):
        costGrid, costRenewableIntegration, excessSolar, excessBattery, utility, temp_battery= computePredictedBatteryChargeAndTotalCost(tempbatterystate, energyFlow[index*96:index*96+96], threshold, batterySize)
        tempbatterystate = temp_battery[95]*1000
        # print("batt for day{}: {}".format(index*96, round((batterystate*100)/ batterySize, 2)))
        solarToGrid += sum([item*1000 for item in utility if item >= 0])
        gridUsage += sum([item*-1000 for item in utility if item <= 0])
        util_final = util_final + utility
        battery_final = battery_final + temp_battery


    return  (gridUsage/entire_home_usage, solarToGrid/entire_solar_gen, (tempbaseload, energyFlow, util_final, battery_final), temp_battery[-1]*1000)


# array of filtered flexible loads --> array of arrays of individual flexible load
def reconstructFilter(filteredFlex): 
    returnArr = []
    tempArr = []
    for i in filteredFlex: 
        if i == 0:
            if tempArr: 
                returnArr.append(tempArr)
                tempArr = []
        else:
            tempArr.append(i)
    return returnArr

def randomlyPruneSchedule(arr, n):
    to_delete = set(random.sample(range(len(arr)), n))
    return [ele for ind, ele in enumerate(arr) if not ind in to_delete]

# array of filtered flexible loads --> days on which charge occurs 
def findDays(filteredFlex):
    curCharge = False
    days = [0]*(len(filteredFlex) // 96)
    for ind, i in enumerate(filteredFlex):
        if i == 0:
            curCharge = False
        elif curCharge:
            continue
        else:
            curCharge = True
            days[(ind//96)] = 1
    return days




if __name__ == "__main__":
    fileNames = ["data_0", "data_1", "data_2", "data_3", "data_4", "data_5", "data_6"]
    # fileNames = fileNames[::-1]
    # fileNames = ["Tesla data 9-23", "Tesla data 9-24", "Tesla data 9-25", "Tesla data 9-26", "Tesla data 9-27","Tesla data 9-28", "Tesla data 9-29", "Tesla data 9-30", 'Tesla data 10-1', 'Tesla data 10-2', 'Tesla data 10-3', 'Tesla data 10-4', 'Tesla data 10-5', 'Tesla data 10-6', 'Tesla data 10-7', 'Tesla data 10-8', 'Tesla data 10-9', 'Tesla data 10-10', 'Tesla data 10-11', 'Tesla data 10-12', 'Tesla data 10-13', 'Tesla data 10-14', 'Tesla data 10-15', 'Tesla data 10-16', 'Tesla data 10-17', 'Tesla data 10-18', 'Tesla data 10-19', 'Tesla data 10-20', 'Tesla data 10-21', 'Tesla data 10-22', 'Tesla data 10-23', 'Tesla data 10-24', 'Tesla data 10-25']
    dayNames = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]

    #32 days

    entire_solar = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 41.67, 125.0, 125.0, 300.0, 475.0, 575.0, 666.66, 750.0, 816.67, 875.0, 925.0, 1000.0, 1066.66, 1108.33, 1133.33, 1175.0, 1208.33, 1233.34, 1216.66, 1258.34, 1266.67, 1225.0, 1183.33, 1158.33, 1191.66, 1175.0, 1125.0, 1083.34, 1058.33, 991.67, 966.67, 966.67, 950.0, 900.0, 808.33, 700.0, 516.67, 416.67, 366.67, 300.0, 175.0, 125.0, 91.67, 58.34, 25.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.33, 50.0, 91.66, 100.0, 100.0, 75.0, 75.0, 100.0, 141.66, 191.67, 166.66, 175.0, 200.0, 291.66, 233.33, 291.67, 475.0, 741.67, 625.0, 616.66, 475.0, 400.0, 466.66, 558.33, 483.34, 516.67, 475.0, 466.67, 450.0, 483.33, 533.33, 491.67, 466.67, 525.0, 550.0, 425.0, 366.67, 258.33, 200.0, 150.0, 108.33, 75.0, 58.34, 16.67, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 41.67, 108.33, 216.66, 266.66, 350.0, 450.0, 550.0, 616.67, 383.33, 416.67, 883.33, 700.0, 833.33, 1100.0, 916.67, 1025.0, 1083.33, 1225.0, 1266.66, 1258.34, 1241.66, 1200.0, 1191.67, 1183.34, 1175.0, 1108.34, 1125.0, 1116.67, 1083.33, 1050.0, 1008.33, 950.0, 883.34, 825.0, 750.0, 675.0, 600.0, 525.0, 450.0, 366.66, 275.0, 200.0, 100.0, 25.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 41.67, 108.33, 216.66, 266.66, 350.0, 450.0, 550.0, 616.67, 383.33, 416.67, 883.33, 700.0, 833.33, 1100.0, 916.67, 1025.0, 1083.33, 1225.0, 1266.66, 1258.34, 1241.66, 1200.0, 1191.67, 1183.34, 1175.0, 1108.34, 1125.0, 1116.67, 1083.33, 1050.0, 1008.33, 950.0, 883.34, 825.0, 750.0, 675.0, 600.0, 525.0, 450.0, 366.66, 275.0, 200.0, 100.0, 25.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.0, 50.0, 66.67, 108.34, 166.67, 133.33, 300.0, 341.67, 325.0, 333.33, 325.0, 375.0, 333.34, 308.33, 316.66, 333.33, 375.0, 416.66, 416.67, 458.33, 483.33, 591.66, 616.66, 583.34, 641.66, 466.67, 466.66, 391.66, 275.0, 258.33, 316.66, 308.34, 241.67, 191.66, 133.34, 116.66, 100.0, 83.33, 66.67, 50.0, 41.66, 8.33, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.33, 50.0, 75.0, 108.34, 158.33, 175.0, 191.67, 200.0, 208.33, 241.66, 258.34, 225.0, 216.67, 300.0, 316.66, 300.0, 308.33, 316.67, 325.0, 400.0, 408.33, 608.34, 608.33, 591.66, 558.34, 433.33, 466.67, 350.0, 383.34, 433.34, 375.0, 333.33, 283.33, 425.0, 408.34, 383.34, 475.0, 525.0, 500.0, 383.34, 283.33, 200.0, 125.0, 58.34, 8.33, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.66, 116.66, 250.0, 375.0, 475.0, 558.34, 625.0, 750.0, 825.0, 900.0, 916.67, 916.67, 1066.67, 1100.0, 1133.33, 1166.67, 1191.67, 1191.66, 1158.33, 1208.33, 1141.66, 1175.0, 1183.33, 1075.0, 1150.0, 1158.33, 1175.0, 1150.0, 1083.34, 1075.0, 1016.66, 966.67, 925.0, 875.0, 800.0, 725.0, 650.0, 550.0, 466.67, 375.0, 275.0, 200.0, 125.0, 58.34, 8.33, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 108.33, 266.67, 366.66, 466.67, 533.33, 650.0, 725.0, 800.0, 858.34, 941.67, 983.33, 1033.33, 1075.0, 1108.33, 1133.33, 1158.34, 1191.67, 1216.66, 1225.0, 1225.0, 1225.0, 1225.0, 1225.0, 1216.66, 1208.33, 1158.33, 1133.33, 1091.66, 1041.67, 1000.0, 958.34, 900.0, 825.0, 775.0, 700.0, 625.0, 525.0, 450.0, 358.33, 275.0, 175.0, 100.0, 58.34, 8.33, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 108.33, 266.67, 366.66, 458.34, 550.0, 650.0, 725.0, 800.0, 875.0, 925.0, 983.33, 1033.33, 1066.66, 1108.33, 1141.66, 1175.0, 1191.67, 1208.33, 1225.0, 1241.67, 1241.66, 1225.0, 1225.0, 1208.33, 1183.34, 1175.0, 1150.0, 1108.34, 1058.33, 1016.66, 966.67, 916.67, 875.0, 800.0, 725.0, 650.0, 550.0, 466.67, 375.0, 275.0, 200.0, 116.66, 50.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.33, 100.0, 241.67, 341.67, 450.0, 525.0, 625.0, 700.0, 766.66, 825.0, 900.0, 950.0, 1008.34, 1050.0, 1083.34, 1116.67, 1141.66, 1166.67, 1183.33, 1200.0, 1200.0, 1200.0, 1200.0, 1208.33, 1183.34, 1175.0, 1150.0, 1133.33, 1091.66, 1025.0, 975.0, 933.33, 891.67, 825.0, 766.67, 683.34, 600.0, 525.0, 441.66, 350.0, 258.33, 175.0, 100.0, 50.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 91.67, 216.66, 341.67, 441.66, 525.0, 608.34, 691.67, 775.0, 850.0, 916.66, 958.33, 1008.34, 1041.67, 1083.34, 1116.67, 1166.67, 1175.0, 1183.33, 1183.33, 1183.33, 1208.33, 1200.0, 1200.0, 1050.0, 1200.0, 483.33, 641.67, 941.67, 1166.66, 1041.66, 950.0, 858.33, 825.0, 750.0, 675.0, 591.67, 525.0, 416.67, 366.66, 258.33, 175.0, 100.0, 41.66, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.33, 50.0, 83.33, 116.67, 183.33, 508.33, 650.0, 700.0, 641.67, 750.0, 758.33, 583.33, 550.0, 433.33, 508.33, 1033.33, 966.67, 1191.67, 1216.66, 1125.0, 1258.34, 1058.33, 1241.67, 1200.0, 1141.66, 1166.66, 1116.67, 1066.66, 700.0, 916.67, 975.0, 816.67, 658.33, 691.67, 833.33, 575.0, 216.67, 183.33, 116.66, 133.34, 83.34, 58.34, 8.33, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.0, 58.33, 91.66, 133.33, 183.33, 275.0, 175.0, 200.0, 216.67, 850.0, 1025.0, 1075.0, 1125.0, 1158.34, 1183.33, 1208.33, 1225.0, 1233.34, 1250.0, 1241.66, 1225.0, 1216.67, 1200.0, 1175.0, 1208.34, 1200.0, 875.0, 525.0, 625.0, 950.0, 1000.0, 641.67, 516.67, 666.67, 600.0, 508.33, 425.0, 325.0, 241.67, 141.67, 91.67, 33.33, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 33.34, 41.67, 50.0, 66.67, 91.66, 133.34, 150.0, 141.67, 150.0, 225.0, 216.67, 258.34, 300.0, 258.33, 358.33, 308.34, 358.33, 508.33, 725.0, 583.33, 758.33, 1308.34, 1208.33, 1216.67, 1191.67, 1166.66, 1133.33, 1125.0, 1041.67, 1000.0, 941.67, 883.34, 825.0, 750.0, 666.66, 583.33, 458.33, 375.0, 291.67, 150.0, 166.67, 83.34, 33.33, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.33, 50.0, 175.0, 183.33, 141.67, 116.67, 125.0, 183.33, 158.34, 83.33, 100.0, 100.0, 100.0, 141.67, 183.34, 183.34, 183.33, 200.0, 150.0, 133.34, 91.67, 83.33, 75.0, 58.33, 75.0, 66.67, 83.33, 158.33, 133.34, 108.34, 141.67, 75.0, 66.67, 41.67, 50.0, 50.0, 41.66, 8.33, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 41.67, 166.67, 350.0, 258.34, 183.33, 308.33, 750.0, 825.0, 875.0, 975.0, 983.33, 850.0, 1175.0, 1316.66, 1100.0, 808.34, 775.0, 400.0, 491.67, 766.66, 666.67, 633.33, 1358.33, 708.33, 1150.0, 1283.33, 1041.67, 1200.0, 1216.67, 1141.67, 1066.66, 958.34, 908.33, 841.66, 750.0, 650.0, 566.67, 466.67, 366.66, 258.33, 175.0, 100.0, 25.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 58.34, 241.67, 366.66, 466.67, 566.67, 675.0, 750.0, 825.0, 900.0, 958.33, 1025.0, 1075.0, 1116.67, 1158.34, 1191.67, 1208.33, 1241.67, 1250.0, 1275.0, 1275.0, 1291.66, 1283.33, 1266.67, 1250.0, 1250.0, 1225.0, 1183.34, 1141.67, 1100.0, 1050.0, 975.0, 925.0, 850.0, 775.0, 708.33, 625.0, 533.34, 450.0, 350.0, 250.0, 166.67, 83.33, 25.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 50.0, 241.67, 366.66, 475.0, 575.0, 666.66, 750.0, 825.0, 900.0, 958.33, 1008.34, 1066.66, 1116.67, 1141.66, 1183.33, 1216.66, 1233.34, 1250.0, 1266.67, 1266.67, 1275.0, 1275.0, 1250.0, 1241.66, 1225.0, 1200.0, 1183.34, 1133.33, 1083.33, 1033.34, 975.0, 925.0, 866.66, 783.33, 700.0, 625.0, 525.0, 433.33, 333.33, 241.67, 150.0, 75.0, 16.67, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 50.0, 225.0, 358.33, 458.34, 566.67, 658.33, 750.0, 833.33, 900.0, 958.33, 1025.0, 1083.34, 1116.67, 1158.34, 1208.34, 1275.0, 1325.0, 1350.0, 1325.0, 1333.34, 1325.0, 1275.0, 1308.34, 1266.67, 1183.34, 1125.0, 1125.0, 1150.0, 1108.34, 1075.0, 1000.0, 950.0, 875.0, 800.0, 716.66, 625.0, 525.0, 425.0, 325.0, 225.0, 150.0, 75.0, 16.67, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 50.0, 225.0, 358.33, 458.34, 566.67, 658.33, 750.0, 833.33, 900.0, 958.33, 1025.0, 1083.34, 1116.67, 1158.34, 1208.34, 1275.0, 1325.0, 1350.0, 1325.0, 1333.34, 1325.0, 1275.0, 1308.34, 1266.67, 1183.34, 1125.0, 1125.0, 1150.0, 1108.34, 1075.0, 1000.0, 950.0, 875.0, 800.0, 716.66, 625.0, 525.0, 425.0, 325.0, 225.0, 150.0, 75.0, 16.67, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 50.0, 216.67, 358.33, 458.34, 558.33, 650.0, 741.66, 825.0, 883.33, 950.0, 1008.34, 1058.33, 1100.0, 1133.33, 1166.67, 1200.0, 1216.66, 1225.0, 1233.34, 1241.67, 1225.0, 1225.0, 1208.33, 1191.67, 1141.66, 1125.0, 1091.66, 1066.67, 1033.34, 991.67, 916.67, 858.33, 800.0, 725.0, 650.0, 575.0, 483.33, 391.67, 300.0, 208.33, 125.0, 66.67, 8.33, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 33.33, 191.66, 333.33, 441.66, 541.67, 633.33, 725.0, 800.0, 875.0, 933.34, 1000.0, 1050.0, 1091.67, 1133.33, 1166.67, 1191.67, 1216.66, 1233.34, 1250.0, 1250.0, 1258.33, 1258.34, 1233.33, 1216.67, 1200.0, 1175.0, 1141.67, 1108.34, 1058.33, 1016.66, 975.0, 900.0, 825.0, 750.0, 675.0, 583.33, 500.0, 400.0, 300.0, 208.33, 125.0, 58.34, 8.33, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 33.33, 191.66, 341.67, 450.0, 550.0, 641.67, 725.0, 800.0, 875.0, 933.34, 1000.0, 1050.0, 1100.0, 1141.66, 1166.67, 1200.0, 1216.66, 1241.67, 1250.0, 1250.0, 1250.0, 1225.0, 1225.0, 1208.33, 1183.34, 1158.33, 1116.67, 1083.33, 1033.34, 983.33, 925.0, 875.0, 800.0, 725.0, 650.0, 566.67, 475.0, 383.34, 291.66, 200.0, 125.0, 58.34, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 33.33, 191.66, 333.33, 441.66, 541.67, 625.0, 725.0, 800.0, 875.0, 925.0, 983.33, 1033.33, 1083.34, 1125.0, 1158.34, 1175.0, 1200.0, 1225.0, 1250.0, 1250.0, 1250.0, 1250.0, 1225.0, 1200.0, 1183.34, 1158.33, 1133.33, 1091.66, 1058.33, 1000.0, 933.33, 883.34, 825.0, 741.67, 658.33, 575.0, 483.33, 391.67, 300.0, 200.0, 125.0, 58.34, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.67, 175.0, 316.67, 433.33, 525.0, 625.0, 700.0, 791.67, 858.34, 925.0, 975.0, 1041.67, 1091.67, 1133.33, 1158.34, 1175.0, 1216.66, 808.34, 1208.34, 1258.33, 1250.0, 1250.0, 1233.33, 1216.67, 1191.67, 1166.66, 1133.33, 1091.66, 1050.0, 1000.0, 950.0, 875.0, 825.0, 725.0, 650.0, 566.67, 475.0, 375.0, 283.33, 191.67, 100.0, 50.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.67, 166.67, 316.67, 441.66, 541.67, 650.0, 733.33, 800.0, 891.66, 975.0, 1050.0, 1125.0, 1175.0, 1225.0, 1250.0, 1225.0, 1241.67, 1250.0, 1291.66, 1308.33, 1316.66, 1291.67, 1266.67, 1233.33, 1216.66, 1216.67, 1200.0, 1150.0, 1100.0, 1050.0, 983.33, 908.34, 850.0, 775.0, 675.0, 583.33, 491.67, 391.67, 291.66, 200.0, 108.33, 50.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.67, 150.0, 300.0, 416.67, 516.66, 616.67, 700.0, 775.0, 850.0, 925.0, 983.33, 1033.33, 1083.34, 1116.67, 1158.34, 1191.67, 1216.66, 1225.0, 1233.34, 1250.0, 1250.0, 1250.0, 1241.66, 1216.67, 1183.34, 1166.66, 1133.33, 1091.66, 1041.67, 1000.0, 933.33, 875.0, 800.0, 725.0, 650.0, 558.33, 466.67, 375.0, 275.0, 183.33, 100.0, 41.66, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.0, 158.34, 300.0, 408.33, 516.66, 616.67, 700.0, 775.0, 850.0, 925.0, 983.33, 1041.67, 1091.67, 1125.0, 1150.0, 1175.0, 1200.0, 1225.0, 1233.34, 1250.0, 1250.0, 1250.0, 1233.33, 1225.0, 1141.66, 1125.0, 891.67, 1066.67, 1083.33, 1000.0, 991.67, 800.0, 616.67, 683.33, 541.66, 525.0, 400.0, 300.0, 275.0, 133.34, 75.0, 25.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 66.66, 175.0, 258.33, 366.67, 383.33, 425.0, 650.0, 741.67, 816.67, 950.0, 1000.0, 1041.67, 1008.33, 983.33, 1000.0, 1050.0, 966.67, 950.0, 983.33, 875.0, 1016.67, 1091.67, 750.0, 933.33, 1025.0, 1075.0, 1075.0, 950.0, 966.67, 1000.0, 750.0, 700.0, 683.33, 608.33, 491.66, 550.0, 400.0, 166.67, 133.34, 133.33, 66.67, 25.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 66.67, 166.66, 233.33, 425.0, 766.67, 483.33, 325.0, 483.33, 1058.33, 433.33, 883.34, 583.33, 800.0, 983.33, 1116.67, 1200.0, 858.34, 1116.67, 1166.66, 1191.66, 1200.0, 1200.0, 1175.0, 1166.66, 1116.67, 1083.33, 1033.34, 991.67, 908.34, 766.67, 650.0, 800.0, 691.67, 458.33, 416.67, 225.0, 225.0, 225.0, 208.34, 75.0, 8.33, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 125.0, 266.66, 350.0, 508.33, 608.33, 675.0, 741.66, 825.0, 883.34, 991.66, 833.34, 700.0, 883.33, 666.66, 1133.33, 1366.66, 483.33, 1108.33, 1083.33, 1258.34, 1225.0, 1208.33, 1183.33, 800.0, 1158.33, 1091.66, 1075.0, 1016.66, 950.0, 883.34, 825.0, 750.0, 675.0, 658.34, 416.67, 508.34, 125.0, 108.33, 58.34, 25.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 66.67, 125.0, 358.33, 350.0, 541.67, 666.67, 666.67, 566.67, 700.0, 750.0, 900.0, 716.67, 958.33, 841.67, 1133.34, 1166.67, 1175.0, 1091.67, 991.67, 1233.34, 1141.67, 1050.0, 900.0, 891.66, 975.0, 1075.0, 991.67, 866.67, 916.67, 633.33, 800.0, 775.0, 441.67, 491.67, 358.33, 150.0, 133.33, 50.0, 25.0, 8.33, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
        

    historical_baseload_avg = [202.81, 194.58, 201.93, 191.39, 182.69, 173.9, 152.74, 148.41, 156.21, 152.03, 145.35, 131.46, 145.11, 131.88, 113.24, 126.82, 123.58, 117.17, 105.16, 117.01, 124.4, 124.16, 136.53, 153.96, 195.83, 188.04, 206.4, 185.39, 157.31, 162.97, 167.69, 157.64, 154.85, 168.95, 180.86, 184.54, 188.6, 211.03, 239.68, 235.96, 240.09, 240.21, 255.46, 256.34, 271.9, 271.71, 284.37, 276.12, 274.44, 280.25, 273.16, 255.94, 259.27, 263.37, 258.82, 253.67, 237.28, 245.57, 238.39, 230.99, 213.81, 210.52, 219.89, 212.48, 199.15, 195.35, 218.14, 209.27, 190.1, 160.07, 153.15, 131.11, 114.27, 101.31, 101.25, 113.19, 118.95, 123.82, 125.34, 123.33, 125.79, 133.73, 128.9, 127.8, 129.78, 120.72, 125.98, 138.6, 139.75, 122.82, 124.05, 121.42, 195.17, 198.38, 219.35, 219.91]

        
    filtered_base = [183.34, 166.67, 141.67, 183.34, 200.0, 200.0, 383.33, 250.0, 166.66, 100.0, 125.0, 183.33, 125.0, 116.67, 150.0, 233.33, 208.33, 225.0, 200.0, 225.0, 150.0, 141.67, 216.67, 150.0, 83.33, 116.66, 141.67, 125.0, 116.66, 133.33, 200.0, 233.33, 225.0, 275.0, 191.66, 150.0, 191.67, 250.0, 200.0, 216.66, 241.67, 300.0, 325.0, 216.67, 308.33, 241.67, 258.33, 291.67, 225.0, 258.34, 291.67, 350.0, 275.0, 383.33, 383.33, 333.33, 383.33, 441.66, 250.0, 183.34, 541.67, 425.0, 375.0, 500.0, 441.67, 308.33, 308.34, 175.0, 216.66, 125.0, 133.33, 116.67, 125.0, 150.0, 125.0, 200.0, 216.67, 225.0, 250.0, 316.67, 275.0, 258.33, 333.33, 258.33, 316.67, 366.67, 375.0, 400.0, 316.67, 416.66, 350.0, 275.0, 258.33, 350.0, 241.67, 233.34, 275.0, 233.33, 291.67, 300.0, 283.34, 241.67, 300.0, 333.34, 225.0, 216.66, 200.0, 133.33, 141.67, 108.33, 116.67, 150.0, 100.0, 100.0, 191.66, 116.66, 108.34, 141.67, 133.33, 216.66, 158.34, 166.66, 150.0, 133.34, 158.33, 250.0, 183.34, 283.33, 250.0, 241.67, 158.33, 208.34, 258.34, 225.0, 375.0, 275.0, 308.33, 275.0, 266.67, 233.34, 258.34, 241.67, 450.0, 237.3844444444444, 237.3844444444444, 237.3844444444444, 237.3844444444444, 237.3844444444444, 237.3844444444444, 237.3844444444444, 237.3844444444444, 237.3844444444444, 237.3844444444444, 191.67, 258.34, 308.33, 183.34, 191.66, 208.33, 266.67, 233.34, 158.33, 166.67, 216.66, 150.0, 133.34, 216.67, 841.67, 375.0, 458.33, 575.0, 350.0, 191.67, 225.0, 241.67, 150.0, 200.0, 183.33, 150.0, 150.0, 233.34, 291.67, 325.0, 300.0, 291.67, 266.66, 266.66, 200.0, 241.66, 216.66, 150.0, 116.67, 216.67, 150.0, 125.0, 166.67, 225.0, 158.33, 525.0, 408.33, 200.0, 125.0, 125.0, 91.67, 141.67, 141.67, 108.33, 141.67, 225.0, 216.67, 191.66, 166.67, 200.0, 175.0, 158.33, 125.0, 108.34, 125.0, 158.34, 175.0, 141.66, 216.67, 166.67, 175.0, 266.66, 250.0, 416.67, 233.07265107212476, 233.07265107212476, 233.07265107212476, 233.07265107212478, 233.07265107212478, 233.0726510721248, 233.0726510721248, 233.07265107212484, 233.07265107212484, 233.07265107212484, 233.07265107212487, 233.07265107212487, 233.0726510721249, 233.0726510721249, 233.07265107212493, 233.07265107212493, 233.07265107212493, 233.07265107212496, 233.07265107212496, 233.07265107212498, 233.07265107212498, 233.07265107212498, 233.072651072125, 233.072651072125, 233.072651072125, 391.66, 250.0, 208.33, 208.34, 241.66, 241.67, 208.33, 150.0, 200.0, 183.33, 125.0, 133.33, 325.0, 108.33, 125.0, 133.33, 141.67, 216.67, 175.0, 191.67, 191.67, 150.0, 191.67, 266.66, 208.33, 191.66, 225.0, 208.33, 175.0, 241.67, 183.34, 166.66, 141.67, 116.66, 116.67, 125.0, 216.67, 150.0, 125.0, 166.67, 225.0, 158.33, 525.0, 408.33, 200.0, 125.0, 125.0, 91.67, 141.67, 141.67, 108.33, 141.67, 225.0, 216.67, 191.66, 166.67, 200.0, 175.0, 158.33, 125.0, 108.34, 125.0, 158.34, 175.0, 141.66, 216.67, 166.67, 175.0, 266.66, 250.0, 416.67, 223.87049605323335, 223.87049605323335, 223.87049605323338, 223.87049605323338, 223.87049605323338, 223.8704960532334, 223.8704960532334, 223.87049605323344, 223.87049605323344, 223.87049605323347, 223.87049605323347, 223.87049605323347, 223.8704960532335, 223.8704960532335, 223.87049605323352, 223.87049605323352, 223.87049605323352, 223.87049605323355, 223.87049605323355, 223.87049605323358, 223.87049605323358, 223.87049605323358, 223.8704960532336, 223.8704960532336, 223.87049605323364, 391.66, 250.0, 208.33, 208.34, 241.66, 241.67, 208.33, 150.0, 200.0, 183.33, 125.0, 133.33, 325.0, 108.33, 125.0, 133.33, 141.67, 216.67, 175.0, 191.67, 191.67, 150.0, 191.67, 266.66, 208.33, 191.66, 225.0, 208.33, 175.0, 241.67, 183.34, 166.66, 141.67, 116.66, 116.67, 125.0, 100.0, 141.67, 133.33, 125.0, 108.34, 133.33, 141.67, 150.0, 100.0, 108.33, 141.66, 116.66, 125.0, 141.66, 133.34, 91.67, 108.34, 100.0, 141.67, 125.0, 83.33, 100.0, 333.33, 200.0, 175.0, 183.34, 208.33, 200.0, 166.66, 141.66, 116.67, 158.33, 166.67, 141.67, 150.0, 175.0, 133.33, 141.67, 291.66, 158.34, 166.66, 191.67, 183.34, 416.67, 250.0, 158.33, 166.66, 225.0, 158.34, 133.33, 316.66, 300.0, 200.0, 200.0, 225.0, 225.0, 191.67, 233.33, 166.67, 158.33, 183.34, 175.0, 166.67, 158.33, 141.67, 125.0, 183.34, 200.0, 183.33, 283.33, 358.33, 241.66, 275.0, 341.67, 333.33, 308.33, 425.0, 375.0, 400.0, 300.0, 216.67, 225.0, 391.66, 550.0, 408.33, 275.0, 258.33, 391.67, 516.67, 333.34, 258.33, 200.0, 141.67, 208.33, 325.0, 358.34, 219.0521894440303, 219.0521894440303, 219.0521894440303, 219.05218944403026, 219.05218944403026, 219.05218944403026, 219.05218944403026, 219.05218944403026, 219.05218944403026, 219.05218944403023, 219.05218944403023, 219.05218944403023, 219.05218944403023, 219.05218944403023, 219.05218944403023, 219.0521894440302, 219.0521894440302, 219.0521894440302, 219.0521894440302, 166.67, 200.0, 200.0, 166.67, 141.66, 75.0, 108.34, 133.34, 125.0, 116.66, 183.34, 316.67, 150.0, 166.67, 291.66, 291.66, 200.0, 141.67, 175.0, 200.0, 150.0, 100.0, 133.33, 216.66, 116.66, 116.67, 216.67, 208.33, 158.33, 183.34, 200.0, 266.67, 191.66, 225.0, 416.66, 325.0, 325.0, 283.33, 291.67, 341.66, 266.66, 283.33, 258.33, 266.66, 333.33, 316.67, 350.0, 225.0, 300.0, 283.34, 341.67, 141.67, 241.67, 166.67, 133.34, 191.66, 158.33, 158.33, 191.67, 250.0, 208.33, 250.0, 266.67, 216.67, 191.67, 266.66, 308.33, 233.33, 208.33, 483.34, 241.67, 191.67, 416.67, 200.0, 250.0, 233.34, 250.0, 250.0, 275.0, 333.33, 216.66, 191.67, 366.66, 283.33, 200.0, 216.67, 366.67, 191.67, 91.66, 116.66, 108.33, 125.0, 150.0, 91.67, 91.67, 133.34, 116.67, 75.0, 225.0, 183.33, 150.0, 166.67, 183.33, 225.0, 216.67, 216.67, 225.0, 241.67, 383.33, 333.34, 141.67, 166.67, 283.34, 216.67, 275.0, 275.0, 325.0, 275.0, 208.33, 283.34, 283.33, 283.33, 275.0, 275.0, 266.67, 316.67, 266.67, 333.33, 383.33, 366.67, 416.66, 283.34, 266.67, 308.33, 291.67, 250.0, 233.33, 333.34, 266.66, 233.33, 250.0, 275.0, 191.67, 216.67, 200.0, 216.67, 200.0, 166.67, 133.33, 241.67, 141.67, 150.0, 183.33, 191.67, 291.66, 358.34, 241.66, 325.0, 375.0, 325.0, 325.0, 491.66, 291.67, 341.67, 300.0, 358.33, 333.33, 333.33, 258.33, 333.34, 283.34, 316.66, 266.67, 241.67, 233.33, 233.34, 275.0, 258.33, 266.67, 525.0, 241.67, 158.33, 141.67, 133.33, 150.0, 141.67, 100.0, 158.34, 275.0, 216.67, 225.0, 233.34, 166.67, 75.0, 200.0, 216.67, 141.67, 133.34, 133.33, 200.0, 191.66, 175.0, 158.33, 225.0, 191.67, 166.66, 183.34, 408.33, 258.33, 316.66, 225.0, 275.0, 383.33, 250.0, 308.33, 375.0, 416.67, 491.67, 541.67, 441.66, 575.0, 516.67, 358.34, 383.33, 441.67, 458.34, 483.34, 433.33, 383.34, 366.67, 391.67, 333.33, 383.34, 441.67, 275.0, 225.0, 475.0, 391.67, 366.67, 241.66, 158.33, 225.0, 141.67, 116.67, 158.34, 191.67, 116.67, 141.67, 116.67, 158.33, 191.67, 166.66, 191.67, 258.33, 208.34, 191.67, 258.33, 216.67, 200.0, 241.67, 225.0, 191.67, 191.66, 183.34, 200.0, 116.67, 200.0, 283.34, 341.66, 233.34, 216.66, 300.0, 341.67, 275.0, 216.66, 341.67, 375.0, 216.66, 200.0, 275.0, 100.0, 100.0, 133.34, 141.67, 125.0, 150.0, 116.67, 158.34, 133.33, 100.0, 133.33, 133.33, 250.0, 116.67, 141.67, 133.34, 116.67, 191.67, 175.0, 175.0, 200.0, 200.0, 1308.33, 1316.67, 1375.0, 2208.33, 441.67, 325.0, 358.33, 391.67, 408.34, 416.67, 358.34, 433.33, 758.33, 1491.66, 1558.34, 1416.66, 958.33, 641.67, 1441.66, 583.33, 333.33, 1383.33, 1525.0, 1475.0, 258.33, 283.33, 300.0, 308.33, 316.66, 291.67, 183.33, 1241.67, 1383.33, 1333.33, 1333.34, 1325.0, 1325.0, 1275.0, 391.67, 150.0, 175.0, 150.0, 141.67, 208.33, 250.0, 241.67, 341.67, 433.33, 608.34, 391.67, 375.0, 658.34, 425.0, 416.67, 458.33, 508.3299999999999, 275.0, 275.0, 258.34, 200.0, 216.67, 200.0, 158.33, 183.34, 125.0, 133.33, 241.66, 191.67, 200.0, 566.66, 216.67, 108.34, 150.0, 116.67, 125.0, 141.66, 258.33, 141.66, 233.34, 200.0, 225.0, 266.67, 183.33, 191.67, 216.67, 216.67, 125.0, 116.66, 141.67, 241.66, 175.0, 166.66, 233.33, 258.34, 183.34, 258.34, 241.66, 250.0, 300.0, 256.75312399779693, 256.753123997797, 256.753123997797, 256.753123997797, 256.753123997797, 256.75312399779705, 256.75312399779705, 256.75312399779705, 256.75312399779705, 256.7531239977971, 325.0, 291.67, 375.0, 325.0, 366.67, 358.34, 350.0, 366.66, 250.0, 258.34, 266.66, 225.0, 283.34, 266.67, 208.33, 258.34, 258.33, 225.0, 258.33, 258.33, 250.0, 183.33, 175.0, 275.0, 166.67, 150.0, 458.33, 1150.0, 433.33, 216.67, 233.33, 275.0, 225.0, 325.0, 250.0, 258.34, 291.67, 283.34, 316.67, 358.33, 358.33, 541.66, 308.34, 283.33, 300.0, 500.0, 166.67, 191.67, 175.0, 166.67, 125.0, 141.66, 216.67, 200.0, 141.66, 166.67, 166.66, 200.0, 116.66, 158.34, 208.33, 150.0, 125.0, 216.67, 350.0, 158.33, 141.67, 141.67, 175.0, 133.34, 166.66, 158.34, 125.0, 158.34, 166.67, 133.33, 283.34, 208.34, 133.33, 108.34, 158.33, 200.0, 183.33, 158.33, 233.33, 233.34, 255.9533259398127, 255.9533259398127, 255.9533259398127, 255.9533259398127, 255.95332593981263, 255.95332593981263, 255.95332593981263, 255.95332593981263, 255.95332593981257, 255.95332593981257, 255.95332593981257, 255.95332593981257, 255.95332593981252, 255.95332593981252, 255.95332593981252, 255.95332593981252, 255.95332593981252, 255.95332593981246, 255.95332593981246, 255.95332593981246, 255.95332593981246, 255.9533259398124, 255.9533259398124, 255.9533259398124, 255.9533259398124, 255.95332593981234, 255.95332593981234, 258.33, 325.0, 225.0, 258.34, 225.0, 241.67, 341.66, 166.66, 191.67, 216.67, 133.34, 133.34, 166.67, 183.34, 175.0, 183.33, 250.0, 175.0, 191.67, 241.67, 183.33, 241.67, 208.34, 191.67, 191.66, 183.34, 325.0, 200.0, 216.67, 291.67, 325.0, 283.33, 325.0, 358.33, 275.0, 200.0, 375.0, 333.34, 233.33, 300.0, 350.0, 333.34, 291.66, 216.67, 141.67, 125.0, 141.67, 158.33, 100.0, 133.33, 308.33, 91.66, 150.0, 141.66, 183.34, 150.0, 91.66, 166.67, 150.0, 83.33, 133.34, 158.34, 100.0, 150.0, 183.33, 191.67, 166.67, 175.0, 233.33, 183.33, 208.34, 233.33, 200.0, 233.33, 208.34, 216.67, 216.66, 200.0, 258.33, 291.67, 225.0, 283.33, 300.0, 241.67, 266.67, 283.33, 283.34, 266.66, 266.67, 325.0, 225.0, 200.0, 275.0, 241.67, 233.33, 200.0, 216.67, 275.0, 208.33, 191.67, 166.67, 116.66, 175.0, 200.0, 116.66, 191.66, 291.66, 266.67, 333.33, 325.0, 358.34, 275.0, 225.0, 283.33, 266.66, 258.33, 266.67, 383.33, 358.34, 408.33, 508.34000000000003, 616.66, 233.34, 258.33, 400.0, 441.66, 391.67, 358.33, 266.67, 266.66, 350.0, 358.34, 291.66, 283.33, 416.66, 666.67, 308.33, 300.0, 375.0, 225.0, 125.0, 100.0, 166.67, 225.0, 300.0, 216.67, 275.0, 200.0, 191.67, 241.67, 200.0, 216.66, 125.0, 166.66, 316.66, 200.0, 208.33, 233.33, 158.33, 158.33, 216.66, 183.33, 150.0, 183.33, 183.34, 175.0, 191.66, 191.66, 283.33, 325.0, 300.0, 333.33, 375.0, 308.34, 366.67, 375.0, 333.33, 333.34, 283.34, 341.67, 316.67, 316.66, 350.0, 341.67, 300.0, 300.0, 300.0, 241.67, 233.33, 258.33, 316.67, 275.0, 208.33, 275.0, 266.67, 208.33, 233.33, 233.34, 166.66, 166.66, 166.66, 166.67, 175.0, 150.0, 191.67, 216.66, 225.0, 200.0, 250.0, 175.0, 225.0, 225.0, 208.34, 241.67, 216.67, 216.67, 225.0, 225.0, 291.66, 283.33, 333.33, 283.34, 200.0, 191.67, 458.34, 166.67, 166.67, 175.0, 108.33, 141.66, 200.0, 133.34, 125.0, 216.67, 200.0, 183.34, 150.0, 191.67, 191.67, 183.33, 141.67, 158.33, 100.0, 100.0, 166.67, 91.67, 108.34, 158.34, 250.0, 208.33, 250.0, 208.33, 258.34, 275.0, 233.33, 291.66, 325.0, 125.0, 141.66, 241.67, 208.33, 158.33, 175.0, 175.0, 175.0, 200.0, 166.66, 233.33, 216.67, 175.0, 191.67, 350.0, 233.34, 208.33, 216.67, 325.0, 308.33, 291.67, 266.67, 316.67, 266.66, 250.0, 258.33, 291.66, 250.0, 233.33, 250.0, 250.0, 216.66, 208.33, 216.66, 233.33, 200.0, 308.33, 200.0, 150.0, 166.66, 191.66, 208.33, 225.0, 283.34, 225.0, 258.34, 275.0, 233.34, 225.0, 250.0, 216.67, 225.0, 233.33, 216.66, 166.66, 150.0, 251.0567133600357, 251.0567133600357, 251.05671336003564, 251.05671336003564, 251.05671336003564, 251.0567133600356, 251.0567133600356, 251.0567133600356, 251.0567133600356, 251.05671336003553, 251.05671336003553, 251.05671336003553, 251.0567133600355, 251.0567133600355, 251.0567133600355, 251.0567133600355, 251.05671336003545, 251.05671336003545, 251.05671336003545, 251.05671336003545, 251.0567133600354, 251.0567133600354, 251.0567133600354, 251.05671336003533, 251.05671336003533, 251.05671336003533, 251.05671336003533, 166.67, 100.0, 133.34, 100.0, 191.67, 216.67, 283.33, 225.0, 308.33, 225.0, 275.0, 200.0, 216.66, 391.67, 316.67, 158.33, 200.0, 216.67, 291.66, 308.34, 216.67, 175.0, 175.0, 366.66, 183.33, 141.67, 191.66, 141.67, 191.66, 175.0, 191.67, 158.34, 191.67, 225.0, 158.34, 108.33, 141.67, 116.67, 183.34, 166.66, 125.0, 116.67, 166.67, 158.33, 191.67, 141.67, 125.0, 158.33, 175.0, 108.33, 116.67, 150.0, 133.33, 158.33, 133.34, 158.34, 125.0, 158.33, 158.33, 141.67, 141.67, 133.33, 200.0, 141.67, 100.0, 133.33, 208.34, 133.34, 116.66, 208.33, 133.34, 125.0, 125.0, 166.66, 158.34, 166.66, 291.66, 125.0, 158.33, 141.67, 133.34, 116.67, 158.33, 166.67, 133.34, 141.67, 125.0, 183.34, 133.34, 116.67, 133.33, 200.0, 141.67, 108.34, 150.0, 133.33, 133.33, 133.33, 158.33, 125.0, 108.34, 175.0, 141.67, 116.67, 125.0, 175.0, 141.66, 133.34, 141.66, 175.0, 216.66, 150.0, 141.67, 191.67, 250.0, 233.34, 208.33, 216.67, 250.0, 266.67, 266.66, 266.67, 241.67, 241.67, 183.33, 175.0, 216.66, 266.66, 191.67, 258.33, 366.66, 300.0, 283.33, 291.67, 283.34, 333.33, 258.33, 233.33, 233.33, 250.0, 241.67, 200.0, 175.0, 233.33, 208.33, 150.0, 175.0, 175.0, 166.67, 133.33, 166.67, 133.33, 158.33, 158.34, 125.0, 141.67, 225.0, 125.0, 125.0, 150.0, 141.67, 141.67, 166.66, 183.33, 133.33, 175.0, 166.66, 133.34, 125.0, 158.34, 150.0, 150.0, 100.0, 183.34, 158.33, 141.67, 133.33, 175.0, 166.67, 125.0, 158.34, 116.67, 175.0, 158.33, 108.33, 116.67, 175.0, 166.66, 108.34, 150.0, 183.33, 166.66, 233.34, 125.0, 141.67, 158.33, 116.66, 133.33, 125.0, 116.67, 133.34, 141.67, 108.33, 125.0, 208.33, 183.33, 175.0, 200.0, 200.0, 225.0, 241.66, 208.34, 241.67, 266.66, 250.0, 250.0, 266.67, 308.34, 291.67, 241.67, 275.0, 300.0, 258.33, 275.0, 350.0, 300.0, 266.66, 258.34, 258.33, 275.0, 266.67, 250.0, 266.67, 283.34, 225.0, 200.0, 233.34, 241.67, 191.66, 175.0, 200.0, 208.33, 183.33, 150.0, 175.0, 183.33, 150.0, 116.66, 125.0, 191.66, 133.33, 100.0, 158.33, 175.0, 125.0, 283.34, 183.33, 200.0, 191.66, 158.34, 150.0, 191.67, 166.67, 100.0, 158.33, 158.33, 141.67, 133.33, 150.0, 141.66, 175.0, 158.34, 133.34, 125.0, 208.33, 108.33, 125.0, 175.0, 141.67, 125.0, 158.33, 141.67, 133.33, 166.67, 166.67, 125.0, 133.33, 175.0, 125.0, 125.0, 116.67, 158.33, 133.33, 125.0, 141.67, 133.33, 158.34, 158.33, 116.66, 116.67, 191.67, 183.33, 158.33, 200.0, 225.0, 208.33, 200.0, 216.67, 283.34, 258.34, 241.66, 300.0, 275.0, 241.66, 275.0, 258.33, 283.34, 275.0, 366.67, 250.0, 275.0, 208.33, 208.33, 300.0, 233.33, 233.33, 216.67, 233.33, 233.33, 208.33, 166.66, 241.67, 191.66, 150.0, 175.0, 225.0, 166.67, 208.34, 150.0, 175.0, 175.0, 116.66, 116.67, 191.67, 125.0, 116.66, 158.34, 150.0, 125.0, 183.34, 133.33, 141.67, 158.33, 141.67, 133.33, 191.67, 133.34, 125.0, 175.0, 150.0, 108.34, 166.67, 150.0, 158.34, 141.66, 125.0, 108.34, 166.66, 125.0, 100.0, 141.66, 158.34, 100.0, 141.67, 166.66, 158.34, 141.67, 150.0, 108.34, 166.67, 133.33, 108.33, 108.34, 158.34, 125.0, 133.33, 116.67, 191.67, 133.33, 100.0, 125.0, 150.0, 116.66, 300.0, 91.67, 125.0, 150.0, 166.67, 183.33, 208.33, 191.66, 191.67, 216.67, 183.33, 208.33, 216.66, 241.67, 225.0, 208.33, 250.0, 250.0, 216.67, 275.0, 291.66, 216.67, 275.0, 208.33, 250.0, 250.0, 200.0, 208.33, 283.33, 183.33, 208.33, 283.34, 225.0, 200.0, 208.33, 200.0, 208.34, 158.33, 158.33, 233.34, 166.67, 116.66, 158.34, 191.66, 125.0, 166.67, 150.0, 175.0, 166.67, 133.34, 133.33, 200.0, 125.0, 116.67, 158.34, 191.66, 133.33, 233.34, 183.33, 216.66, 408.34, 325.0, 175.0, 183.33, 175.0, 125.0, 141.67, 183.33, 125.0, 108.34, 166.66, 125.0, 100.0, 141.66, 158.34, 100.0, 141.67, 166.66, 158.34, 141.67, 150.0, 108.34, 166.67, 133.33, 108.33, 108.34, 158.34, 125.0, 133.33, 116.67, 191.67, 133.33, 100.0, 125.0, 150.0, 116.66, 300.0, 91.67, 125.0, 150.0, 166.67, 183.33, 208.33, 191.66, 191.67, 216.67, 183.33, 208.33, 216.66, 241.67, 225.0, 208.33, 250.0, 250.0, 216.67, 275.0, 291.66, 216.67, 275.0, 208.33, 250.0, 250.0, 200.0, 208.33, 283.33, 183.33, 208.33, 283.34, 225.0, 200.0, 208.33, 200.0, 208.34, 158.33, 158.33, 233.34, 166.67, 116.66, 158.34, 191.66, 125.0, 166.67, 150.0, 175.0, 166.67, 133.34, 133.33, 200.0, 125.0, 116.67, 158.34, 191.66, 133.33, 233.34, 183.33, 216.66, 408.34, 325.0, 175.0, 183.33, 175.0, 125.0, 141.67, 183.33, 150.0, 141.67, 125.0, 150.0, 125.0, 108.34, 158.33, 133.33, 125.0, 133.34, 183.34, 125.0, 133.33, 108.34, 150.0, 125.0, 100.0, 133.34, 91.66, 141.67, 125.0, 108.33, 91.66, 158.33, 150.0, 83.33, 91.66, 125.0, 291.66, 91.67, 75.0, 141.67, 341.66, 200.0, 200.0, 208.34, 225.0, 225.0, 208.33, 216.66, 266.67, 250.0, 216.66, 233.33, 266.67, 258.33, 225.0, 241.66, 283.33, 258.34, 191.67, 250.0, 216.66, 241.67, 216.67, 175.0, 200.0, 258.33, 175.0, 258.33, 233.34, 208.34, 183.34, 208.33, 158.33, 200.0, 208.33, 275.0, 483.34, 575.0, 175.0, 125.0, 133.33, 116.67, 133.34, 125.0, 116.66, 116.67, 133.34, 191.66, 191.67, 166.66, 216.67, 166.66, 183.34, 166.66, 208.34, 125.0, 100.0, 141.67, 108.34, 133.33, 133.33, 166.67, 216.67, 191.67, 133.33, 100.0, 116.67, 158.34, 125.0, 108.33, 116.67, 133.34, 166.67, 91.66, 116.67, 108.34, 158.33, 133.33, 133.33, 108.33, 108.34, 158.34, 83.33, 100.0, 116.67, 141.67, 91.66, 108.34, 191.67, 158.33, 175.0, 233.33, 258.33, 150.0, 216.67, 191.66, 175.0, 266.67, 308.34, 225.0, 227.05786021582415, 227.05786021582415, 227.05786021582418, 227.05786021582418, 227.05786021582418, 227.05786021582418, 227.05786021582418, 227.05786021582418, 227.05786021582418, 227.05786021582418, 227.05786021582418, 227.05786021582418, 227.0578602158242, 227.0578602158242, 227.0578602158242, 227.0578602158242, 458.34, 275.0, 291.67, 550.0, 291.67, 275.0, 341.67, 341.66, 283.34, 233.34, 291.67, 316.67, 200.0, 266.66, 341.67, 375.0, 275.0, 200.0, 258.34, 183.33, 216.67, 308.34, 366.66, 258.33, 216.67, 308.33, 366.66, 250.0, 333.33, 391.66, 408.33, 258.33, 208.34, 183.33, 241.67, 300.0, 233.33, 266.67, 266.66, 225.0, 225.0, 325.0, 358.33, 366.67, 250.0, 266.67, 333.34, 325.0, 275.0, 308.34, 366.67, 608.33, 391.67, 275.0, 258.34, 158.33, 158.33, 133.33, 133.33, 100.0, 225.0, 233.33, 191.67, 233.33, 316.67, 358.33, 408.33, 291.66, 258.33, 241.67, 183.33, 208.34, 200.0, 233.33, 200.0, 216.66, 233.33, 300.0, 241.66, 283.33, 375.0, 416.67, 425.0, 383.34, 458.33, 566.67, 500.0, 350.0, 366.67, 341.66, 291.67, 416.67, 308.33, 333.33, 375.0, 358.33, 350.0, 391.67, 300.0, 333.33, 350.0, 308.33, 308.34, 333.33, 300.0, 391.67, 283.33, 250.0, 258.33, 200.0, 158.33, 183.33, 175.0, 125.0, 158.33, 141.67, 141.66, 133.34, 108.33, 125.0, 191.67, 125.0, 150.0, 141.66, 200.0, 183.33, 183.33, 200.0, 225.0, 208.33, 241.66, 291.67, 308.33, 300.0, 241.67, 241.67, 283.33, 225.0, 300.0, 166.67, 166.66, 125.0, 158.33, 125.0, 216.66, 200.0, 525.0, 225.0, 175.0, 91.67, 91.66, 150.0, 125.0, 108.33, 150.0, 166.67, 191.67, 225.0, 166.66, 166.66, 208.33, 133.33, 150.0, 125.0, 125.0, 108.33, 125.0, 283.34, 200.0, 216.67, 200.0, 183.33, 191.67, 166.67, 200.0, 200.0, 216.67, 216.67, 208.34, 208.34, 300.0, 266.67, 241.66, 300.0, 291.67, 225.0, 283.33, 258.34, 275.0, 266.66, 216.67, 275.0, 225.0, 175.0, 233.33, 283.33, 241.67, 216.67, 216.67, 266.67, 208.33, 183.33, 216.66, 191.66, 158.33, 191.67, 233.33, 208.33, 191.66, 150.0, 175.0, 158.34, 125.0, 125.0, 183.33, 150.0, 133.33, 141.67, 158.34, 150.0, 258.33, 333.33, 250.0, 191.67, 116.67, 141.66, 150.0, 108.33, 108.34, 166.67, 150.0, 141.67, 125.0, 125.0, 141.66, 141.67, 75.0, 166.67, 133.33, 100.0, 116.67, 183.33, 125.0, 133.33, 108.33, 150.0, 141.66, 108.33, 108.34, 175.0, 108.33, 91.66, 133.34, 158.33, 125.0, 141.66, 91.66, 150.0, 141.66, 75.0, 116.67, 341.67, 183.33, 216.67, 166.66, 150.0, 116.67, 166.67, 158.33, 216.66, 183.33, 227.35724050706847, 227.3572405070685, 227.35724050706852, 227.35724050706852, 227.35724050706855, 227.35724050706855, 227.35724050706858, 227.35724050706858, 227.3572405070686, 227.3572405070686, 227.35724050706864, 227.35724050706864, 227.35724050706867, 227.35724050706867, 227.35724050706867, 227.3572405070687, 227.3572405070687, 227.35724050706872, 227.35724050706872, 227.35724050706875, 275.0, 325.0, 233.34, 216.67, 241.67, 266.66, 191.67, 225.0, 200.0, 225.0, 175.0, 208.33, 208.34, 333.33, 141.67, 100.0, 150.0, 158.34, 100.0, 150.0, 183.33, 200.0, 233.33, 200.0, 216.67, 191.67, 125.0, 133.33, 150.0, 158.33, 150.0, 150.0, 175.0, 141.66, 150.0, 141.67, 191.67, 175.0, 208.33, 275.0, 216.67, 266.66, 283.33, 241.67, 225.0, 275.0, 275.0, 241.66, 250.0, 350.0, 258.33, 150.0, 116.67, 191.67, 108.33, 83.33, 175.0, 108.33, 100.0, 141.67, 258.33, 133.33, 141.66, 100.0, 166.67, 133.33, 91.67, 133.34, 150.0, 166.67, 208.33, 200.0, 191.66, 225.0, 200.0, 241.66, 358.33, 241.67, 291.66, 358.33, 216.67, 258.34, 250.0, 258.34, 275.0, 250.0, 275.0, 233.33, 233.33, 325.0, 450.0, 350.0, 300.0, 508.34000000000003, 358.33, 275.0, 241.66, 300.0, 233.34, 233.33, 350.0, 291.66, 266.67, 341.66, 391.66, 233.33, 216.67, 183.34, 258.33, 175.0, 116.66, 116.67, 191.67, 75.0, 116.67, 166.66, 225.0, 191.67, 250.0, 200.0, 258.33, 225.0, 241.66, 266.67, 316.66, 233.34, 233.34, 258.34, 266.66, 200.0, 241.66, 233.33, 250.0, 225.0, 366.67, 433.33, 308.34, 258.34, 366.66, 333.33, 208.34, 300.0, 383.33, 758.33, 383.33, 258.33, 208.33, 275.0, 116.67, 133.33, 183.33, 141.67, 166.66, 208.33, 183.33, 191.66, 250.0, 133.33, 175.0, 283.34, 125.0, 150.0, 175.0, 175.0, 158.33, 183.33, 225.0, 308.33, 158.33, 191.67, 283.33, 258.33, 233.34, 241.67, 383.34, 300.0, 316.67, 675.0, 450.0, 366.67, 558.33, 400.0, 391.67, 333.33, 366.67, 316.67, 325.0, 300.0, 408.34, 341.67, 266.66, 241.66, 275.0, 200.0, 191.66, 216.67, 333.33, 175.0, 183.33, 175.0, 166.67, 175.0, 166.66, 183.34, 166.67, 166.66, 166.67, 191.66, 141.67, 175.0, 150.0, 258.33, 191.66, 175.0, 208.33, 225.0, 158.34, 183.34, 200.0, 166.66, 183.34, 216.67, 233.33, 191.66, 183.34, 250.0, 325.0, 166.67, 175.0, 200.0, 225.0, 233.34, 225.0, 291.67, 250.0, 183.33, 275.0, 316.66, 208.33, 300.0, 308.33, 208.34, 333.33, 208.34, 175.0, 183.33, 158.33, 141.67, 183.34, 125.0, 83.33, 133.33, 175.0, 100.0, 116.67, 108.33, 300.0, 125.0, 100.0, 100.0, 241.67, 400.0, 233.33, 266.67, 333.34, 258.33, 233.33, 250.0, 250.0, 266.67, 200.0, 275.0, 300.0, 266.66, 275.0, 333.33, 275.0, 283.33, 383.34, 308.34, 266.67, 241.67, 233.33, 275.0, 241.66, 208.34, 241.67, 233.34, 300.0, 200.0, 225.0, 191.67, 175.0, 200.0, 200.0, 133.33, 150.0, 166.67, 141.66, 141.67, 175.0, 158.33, 200.0, 208.34, 191.67, 191.66, 175.0, 150.0, 166.66, 200.0, 183.33, 175.0, 175.0, 208.34, 200.0, 183.33, 158.33, 308.33, 300.0, 300.0, 341.66, 227.5474403568377, 227.5474403568377, 227.5474403568377, 227.54744035683768, 227.54744035683768, 227.54744035683768, 227.54744035683768, 227.54744035683768, 227.54744035683768, 227.54744035683768, 227.54744035683768, 227.54744035683768, 227.54744035683768, 227.54744035683765, 227.54744035683765, 227.54744035683765, 227.54744035683765, 227.54744035683765, 227.54744035683765, 227.54744035683765, 227.54744035683765, 227.54744035683765, 227.54744035683763, 227.54744035683763, 227.54744035683763, 227.54744035683763, 227.54744035683763, 227.54744035683763, 227.54744035683763, 227.54744035683763, 227.54744035683763, 227.5474403568376, 227.5474403568376, 227.5474403568376, 227.5474403568376, 227.5474403568376, 227.5474403568376, 227.5474403568376, 227.5474403568376, 227.5474403568376, 227.5474403568376, 227.54744035683757, 227.54744035683757, 227.54744035683757, 227.54744035683757, 227.54744035683757, 227.54744035683757, 227.54744035683757, 258.33, 333.33, 416.66, 266.67, 366.66, 358.33, 341.66, 341.66, 300.0, 266.66, 375.0, 308.34, 225.0, 216.67, 233.33, 200.0, 291.66, 233.34, 166.66, 200.0, 191.67, 208.33, 175.0, 200.0, 283.34, 358.33, 341.67, 341.67, 275.0, 125.0, 166.66, 166.66, 100.0, 116.67, 166.67, 116.67, 150.0, 141.67, 150.0, 125.0, 108.33, 116.67, 183.34, 116.66, 108.34, 216.67, 150.0, 133.33, 216.66, 208.33, 166.67, 166.66, 150.0, 291.66, 333.33, 250.0, 241.66, 408.33, 266.67, 191.66, 300.0, 341.67, 258.33, 216.66, 250.0, 350.0, 216.66, 100.0, 150.0, 333.33, 116.66, 116.67, 166.67, 116.66, 125.0, 116.66, 133.33, 158.33, 116.67, 83.33, 150.0, 150.0, 91.66, 125.0, 391.67, 208.33, 216.67, 175.0, 216.67, 183.33, 141.67, 208.33, 816.67, 783.34, 566.66, 200.0, 191.66, 258.34, 200.0, 250.0, 308.33, 275.0, 200.0, 216.67, 233.33, 250.0, 233.33, 258.34, 233.33, 275.0, 258.33, 291.67, 266.67, 233.34, 166.67, 208.33, 216.66, 191.67, 175.0, 200.0, 208.33, 316.66, 308.34, 283.34, 291.67, 300.0, 325.0, 258.33, 258.33, 275.0, 266.67, 241.66, 300.0, 333.33, 208.33, 166.67, 183.33, 125.0, 133.33, 225.0, 141.67, 141.66, 225.0, 241.67, 200.0, 191.66, 200.0, 225.0, 208.34, 233.33, 175.0, 166.67, 200.0, 200.0, 175.0, 175.0, 250.0, 200.0, 483.34, 241.67, 175.0, 141.67, 183.33, 233.33, 241.67, 191.66, 158.34, 191.66, 216.66, 250.0, 166.67, 175.0, 200.0, 225.0, 191.67, 133.33, 183.33, 241.67, 125.0, 125.0, 100.0, 100.0, 116.66, 291.67, 141.67, 166.67, 191.66, 183.33, 216.67, 233.33, 241.66, 225.0, 275.0, 241.67, 200.0, 208.33, 166.67, 258.33, 275.0, 150.0, 225.0, 241.67, 275.0, 250.0, 216.67, 291.66, 283.34, 250.0, 191.67, 208.33, 216.67, 175.0, 200.0, 175.0, 175.0, 158.34, 233.33, 191.67, 150.0, 141.66, 166.67, 183.33, 91.67, 116.67, 125.0, 141.67, 141.67, 83.33, 116.67, 175.0, 108.33, 100.0, 166.67, 150.0, 200.0, 208.33, 183.34, 183.33, 191.67, 150.0, 226.62014305618385, 226.62014305618382, 226.62014305618382, 226.62014305618382, 226.6201430561838, 226.6201430561838, 226.62014305618376, 226.62014305618376, 226.62014305618376, 226.62014305618374, 226.62014305618374, 226.62014305618374, 226.6201430561837, 226.6201430561837, 226.62014305618368, 226.62014305618368, 226.62014305618368, 226.62014305618368, 226.62014305618368, 226.62014305618368, 226.62014305618365, 226.62014305618365, 226.62014305618362, 226.62014305618362, 226.62014305618362, 226.6201430561836, 226.6201430561836, 226.6201430561836, 226.62014305618357, 226.62014305618357, 226.62014305618354, 226.62014305618354, 226.62014305618354, 226.6201430561835, 226.6201430561835, 226.6201430561835, 226.62014305618348, 226.62014305618348, 226.62014305618345, 226.62014305618345, 226.62014305618345, 226.62014305618342, 226.62014305618342, 226.62014305618342, 226.6201430561834, 226.6201430561834, 233.33, 266.67, 250.0, 258.34, 200.0, 275.0, 300.0, 233.33, 241.67, 341.67, 250.0, 233.33, 266.67, 250.0, 241.67, 241.67, 283.33, 308.33, 258.33, 233.34, 250.0, 241.66, 225.0, 258.33, 241.67, 175.0, 191.66, 216.66, 150.0, 325.0, 175.0, 200.0, 191.67, 300.0, 308.34, 150.0, 175.0, 383.33, 116.66, 133.33, 133.34, 133.33, 108.34, 141.67, 125.0, 158.34, 125.0, 100.0, 125.0, 183.33, 175.0, 225.0, 133.33, 150.0, 166.67, 258.33, 250.0, 250.0]


    filtered_flex = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1129.2855555555557, 1104.2755555555557, 1137.6155555555556, 1104.2755555555557, 1054.2755555555557, 1012.6155555555556, 962.6155555555556, 945.9555555555554, 1037.6155555555556, 562.6155555555556, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1750.267348927875, 1116.9273489278753, 1350.257348927875, 1100.257348927875, 958.5873489278754, 1200.267348927875, 1058.5873489278752, 1108.5873489278752, 1200.2573489278752, 1000.2673489278751, 1233.5973489278754, 1216.927348927875, 933.5973489278751, 1283.5973489278751, 1383.597348927875, 891.9273489278751, 1275.257348927875, 1175.2573489278748, 1000.257348927875, 1233.5973489278751, 1033.597348927875, 1258.597348927875, 1308.5973489278751, 875.2673489278749, 1266.9273489278748, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1759.4695039467665, 1126.1295039467666, 1359.4595039467665, 1109.4595039467665, 967.7895039467668, 1209.4695039467665, 1067.7895039467667, 1117.7895039467667, 1209.4595039467665, 1009.4695039467665, 1242.7995039467667, 1226.1295039467666, 942.7995039467665, 1292.7995039467667, 1392.7995039467664, 901.1295039467665, 1284.4595039467663, 1184.4595039467663, 1009.4595039467664, 1242.7995039467664, 1042.7995039467664, 1267.7995039467664, 1317.7995039467664, 884.4695039467663, 1276.1295039467664, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1289.2778105559696, 1339.2778105559698, 1230.9478105559697, 1180.9478105559697, 1289.2878105559698, 1255.94781055597, 1397.6178105559698, 1397.6178105559698, 1122.61781055597, 1280.9478105559697, 980.9478105559697, 1105.9478105559697, 897.6178105559698, 1180.9478105559697, 889.2778105559697, 1164.2778105559696, 1155.9478105559697, 1222.60781055597, 697.6078105559698, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 768.246876002203, 951.576876002203, 1184.916876002203, 801.5768760022031, 901.5768760022029, 918.246876002203, 868.246876002203, 868.246876002203, 851.576876002203, 768.2468760022027, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 760.7166740601873, 810.7066740601875, 844.0466740601875, 852.3766740601874, 802.3866740601873, 860.7166740601875, 860.7166740601875, 827.3866740601874, 885.7066740601875, 910.7166740601875, 869.0466740601875, 894.0466740601873, 877.3766740601874, 910.7166740601875, 860.7166740601875, 894.0466740601873, 935.7066740601875, 810.7166740601875, 877.3766740601875, 819.0466740601875, 835.7166740601876, 835.7166740601878, 852.3766740601877, 910.7066740601877, 844.0466740601878, 852.3766740601877, 527.3766740601877, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1698.9432866399643, 1148.9432866399643, 1190.6032866399646, 1015.6132866399643, 973.9432866399644, 1190.6032866399646, 1065.6132866399644, 932.2832866399642, 1157.2832866399642, 1132.2732866399642, 865.6032866399645, 1165.6132866399646, 1140.6032866399646, 873.9432866399645, 1140.6032866399646, 1107.2732866399647, 882.2832866399646, 1190.6032866399648, 1140.6032866399646, 857.2832866399644, 1165.6132866399646, 1173.9432866399645, 815.6132866399646, 1148.9432866399648, 1173.9432866399645, 815.6132866399647, 1132.2732866399647, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 556.2821397841759, 1022.9421397841758, 1022.9421397841758, 1106.2721397841758, 1097.9421397841757, 1022.9421397841758, 1072.9421397841759, 1114.602139784176, 1064.612139784176, 1047.9421397841757, 1147.9421397841759, 1097.9421397841757, 1097.9421397841757, 1106.2721397841758, 1106.2721397841758, 1139.612139784176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 805.9727594929313, 905.9727594929315, 905.9727594929315, 847.6427594929314, 914.3127594929315, 922.6427594929314, 939.3027594929315, 955.9827594929313, 930.9827594929313, 972.6427594929313, 980.9727594929312, 905.9727594929313, 914.3127594929314, 997.6427594929314, 922.6427594929312, 964.3127594929313, 989.3127594929314, 1039.3027594929313, 989.3127594929314, 930.9727594929311, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1030.7825596431624, 839.1225596431623, 1039.1225596431623, 1005.7825596431625, 872.4525596431623, 947.4525596431623, 880.7925596431621, 897.4525596431623, 839.1225596431623, 805.7925596431622, 847.4525596431622, 855.7825596431622, 830.7825596431622, 905.7825596431624, 1230.7825596431624, 880.7925596431622, 822.4525596431624, 839.1125596431625, 797.4525596431623, 822.4525596431624, 839.1125596431625, 814.1125596431624, 805.7925596431623, 889.1225596431625, 922.4525596431623, 872.4525596431624, 864.1125596431625, 897.4525596431624, 855.7825596431622, 830.7825596431624, 864.1225596431625, 805.7825596431622, 797.4525596431623, 822.4525596431624, 980.7925596431623, 1005.7825596431625, 889.1125596431624, 830.7825596431624, 864.1225596431625, 905.7925596431625, 880.7825596431625, 972.4525596431623, 930.7925596431623, 939.1125596431624, 947.4525596431624, 1380.7825596431624, 1097.4525596431624, 797.4525596431623, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1440.0398569438162, 1315.0398569438162, 1056.709856943816, 923.3798569438161, 1223.379856943816, 981.709856943816, 973.3798569438161, 1198.3798569438163, 998.3798569438162, 1040.0498569438162, 1148.379856943816, 1056.709856943816, 1148.379856943816, 1148.379856943816, 815.0498569438164, 1181.7098569438162, 1065.0398569438164, 931.7098569438162, 1140.0498569438164, 998.3798569438164, 1023.3798569438164, 1181.7198569438162, 931.7098569438162, 1090.0398569438166, 1123.3798569438165, 840.0498569438164, 1165.0398569438164, 1056.7198569438162, 848.3798569438163, 1131.7198569438162, 931.7098569438164, 1090.0398569438166, 1156.7098569438162, 906.7098569438165, 1106.7198569438165, 1156.7098569438165, 865.0398569438166, 1148.3798569438165, 1123.3798569438168, 915.0498569438166, 1198.3798569438165, 1140.0498569438166, 965.0398569438167, 1190.0398569438166, 1006.7198569438165, 706.7198569438167, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

    # avg duration: 23.384615384615383
    # avg charge: 23.95680254265759

    filtered_flex_nozeroes = [1041.5]*23

    daysCharged = findDays(filtered_flex)
    reconstructed_filter = reconstructFilter(filtered_flex)

    # print(findDays(filtered_flex))
    #baseForecast = baseForecast*8

    #settings 
    weight1 = 1 #importance of cost 
    weight2 = 2 #importance of renewable integ
    weight3 = 2 #importance of shutoff
    lowerLimit = 30
    maximumLimit = 100
    shutOffRisk = 0
    idealReserveThreshold = 80
    

    #4 powerwalls = 4*13.5kwH = 54kWh 
    batterySize = 54000
    currentBatteryState1, currentBatteryState2, originalBatteryState = 0.79*batterySize, 0.79*batterySize, 0.79*batterySize

    pred_battery_tesla = []
    pred_battery_watthours = []
    entire_home = []
    entire_solar = []
    weekly_best_times = []
    actual_grid = []
    modeled_grid = []
    actual_battery = []

    battery_level_from_forecasted = []
    gridUsage = 0
    solarToGrid = 0 

    hoursLost = 0
    energyLost = 0
    fl_to_charge = []
    daysLost = 0

    for ind, name in enumerate(fileNames):
        if (ind >= 17) and (ind <= 30):
            risk = 0.5
        else:
            risk = 0

        #print(currentBatteryState)
        # home, solar, powerwall, grid, battery_level = parse("data/month/"+name+".csv")
        
        home, solar, powerwall, grid, battery_level = parse("data/algotrialweek/"+name+".csv")

        #extracting data
        actual_grid = actual_grid + grid
        entire_home = entire_home + home
        entire_solar = entire_solar + solar
        actual_battery = actual_battery + battery_level
        energyFlow = computeEnergyFlow(solar, home)
        costGrid, costRenewableIntegration, excessSolar, excessBattery, utility, temp_battery= computePredictedBatteryChargeAndTotalCost(currentBatteryState1, energyFlow, lowerLimit, batterySize)
        utility = utility[:96]
        solarToGrid += sum([item*1000 for item in utility if item >= 0])
        gridUsage += sum([item*-1000 for item in utility if item <= 0])
        modeled_grid = modeled_grid + utility[:96]
        # print(excessSolar)
        currentBatteryState1 = temp_battery[95]*1000
        pred_battery_watthours = pred_battery_watthours + temp_battery[:96]
        temp_battery = [round(item / (batterySize/1000), 2)*100 for item in temp_battery] #convert to battery percentage
        temp_battery = temp_battery[:96]
        pred_battery_tesla = pred_battery_tesla + temp_battery
    print("Original grid usage: {}%, solar to grid: {}%".format(gridUsage*100/ sum(entire_home), solarToGrid*100/(sum(entire_solar))))
    print("original data:")
    print("entire_home = ", entire_home)
    print("entire_solar = ", entire_solar)
    print("pred_battery_tesla = ", pred_battery_tesla)
    print("actual_battery = ", actual_battery)

    # val1, val2, u_, endingBatt = checkTime(originalBatteryState, batterySize, filtered_base*4, entire_solar, True, filtered_flex_nozeroes, 0, 88)

    # val1, val2, u_ = checkTime(originalBatteryState, batterySize, filtered_base[:672], entire_solar, False, filtered_flex_nozeroes, 0, 88)
    # print("With flex load grid usage: {}%, solar to grid: {}%".format(val1, val2))

    algoScheduleResults = []
    algoThresholdResults = []
    lostChargeSessions = []
    extraChargeSessions = []
    iterations = 5000
    reconstructed_filter_index = 0


    for ind, name in enumerate(fileNames):
        #print(currentBatteryState)
        if (ind == 32):
            continue

        if (ind >= 17) and (ind <= 30):
            shutOffRisk = 0.5
        else:
            shutOffRisk = 0

        home, solar, powerwall, grid, battery_level = parse("data/month/"+name+".csv")


        # algorithm testing 
        #user_model = UserProfile(weight1, weight2, weight3, lowerLimit, maximumLimit, shutOffRisk, idealReserveThreshold, solarForecast, baseForecast, currentBatteryState, batterySize)
        #baseForecast = filtered_base[ind*96:ind*96+192]
        baseForecast = historical_baseload_avg*2
        #solarForecast = pred_solar[ind*96:ind*96+192]
        solarForecast = entire_solar[ind*96:ind*96+192]

        if (len(solarForecast) != 192 or len(baseForecast) != 192):
            print("ERROR")
        user_model = UserProfile(weight1, weight2, weight3, lowerLimit, maximumLimit, shutOffRisk, idealReserveThreshold, solarForecast, baseForecast, currentBatteryState2, batterySize, 64, 96)
        #64 --> 4pm 

        # avg duration: 10.630434782608695 --> 11
        # avg charge: 10.854913043478252 --> 10854.91
        TeslaEV = FlexibleLoad("Tesla EV", 1085.491, 20, 40) #example

        (best_threshold, best_performance, best_sol, best_batt, (cost, schedule, utility, battery), should_charge, solutions)= find_optimal_threshold_and_schedule(user_model, TeslaEV)
        algoThresholdResults.append(best_threshold)

        #assume user follows recommended schedule
        #currentBatteryState2 = best_batt[95]*1000
        #assume never charge
        currentBatteryState2 = battery[-1][95]*1000

        # good_times, costCharge = find_good_times(user_model, best_threshold, TeslaEV)
        # besttimes = convertRangeToTimes(findRange(good_times + [0]))
        # weekly_best_times = weekly_best_times + good_times
        # shouldCharge = should_charge(user_model, best_threshold, costCharge)
        # print("Results for {}: Best threshold - {}, Should charge - {}, Best Solution - {}, End of day Battery level - {}%. ".format(name, best_threshold, should_charge, scheduleToString(best_sol), round(currentBatteryState2  * 100 / batterySize, 2 )))        
        print("Results for {}: Best threshold - {}, Should charge - {}, Best Solution - {}".format(name, best_threshold, should_charge, scheduleToString(best_sol)))

        if daysCharged[ind] == 1: #user charged in reality
            if (should_charge):
                print("Success: User also needed to charge in reality, charge #{} lasting {} hrs.".format( reconstructed_filter_index, len(reconstructed_filter[reconstructed_filter_index])/4))
                fl_to_charge.append(reconstructed_filter[reconstructed_filter_index])
                algoScheduleResults.append([ind, best_sol[2], best_sol[1]])
            else:
                daysLost += 1
                print("Failure: User needed to charge today, charge #{} lasting {} hrs.".format( reconstructed_filter_index, len(reconstructed_filter[reconstructed_filter_index])/4))
            # print(best_sol[1])
            hoursLost += max((len(reconstructed_filter[reconstructed_filter_index])- best_sol[1]), 0)/4
            energyLost += sum(reconstructed_filter[reconstructed_filter_index][best_sol[1]:])/1000
            lostChargeSessions.append(reconstructed_filter[reconstructed_filter_index][best_sol[1]:])
            reconstructed_filter_index += 1
            # algoScheduleResults.append([ind, findRange(schedule + [0])[0][0]])
        else :
            if (should_charge):
                extraChargeSessions.append([ind, best_sol[2], best_sol[1]])
                
        print("--------------------------------------------------------------------------")

    # print(len(filtered_base))
    # print(len(entire_solar))
    # print(len(fl_to_charge))
    # print(len(algoScheduleResults))
    val1, val2, (baseLoad, energyFlow, util_final, battery_final), endingBatt = checkMonth(originalBatteryState, batterySize, filtered_base, entire_solar[:-96], fl_to_charge, algoScheduleResults, algoThresholdResults)
    print("Estimated performance: grid usage {}%, solar to grid: {}%, with ending battery {}".format(val1*100, val2*100, round((endingBatt*100) / batterySize, 2) ))
 
    battery_final = [round((item*1000*100) / batterySize, 2) for item in battery_final] #convert to battery percentage

# schedule = [[day, timeOfDay, duration], [day, timeOfDay, duration], ... ]
# flexibleLoad = FLs to charge 
# def checkMonth(batterystate, batterySize, baseLoad, solar, flexibleLoad, schedule):

    print("STATS - hours of charging lost: {}, kWh lost: {}, days lost: {}. ".format( hoursLost, energyLost, daysLost))



    flat_list = [item for sublist in lostChargeSessions for item in sublist]
    lostChargeSessions = [ flat_list[0:30], flat_list[30:]]
    # print(lostChargeSessions)
    # print(len(lostChargeSessions))

    val1, val2, (baseLoad, energyFlow, util_final, battery_final), endingBatt = checkMonth(originalBatteryState, batterySize, filtered_base, entire_solar[:-96], fl_to_charge, algoScheduleResults, algoThresholdResults)
    print("Estimated performance2: grid usage {}%, solar to grid: {}%, with ending battery {}".format(val1*100, val2*100, round((endingBatt*100) / batterySize, 2) ))

    val1, val2, (baseLoad, energyFlow, util_final, battery_final), endingBatt = checkMonth(originalBatteryState, batterySize, baseLoad, entire_solar[:-96], lostChargeSessions, [[17,95,99],[18,95,99]], algoThresholdResults)
    print("Estimated performance of inserting charge time: grid usage {}%, solar to grid: {}%, with ending battery {}".format(val1*100, val2*100, round((endingBatt*100) / batterySize, 2) ))



    #model
    # print("DATA:")
    print("baseload_test = ", baseLoad)
    print("energyflow_test = ", energyFlow)
    print("util_test = ", util_final)
    print("batt_test = ", battery_final)


    # print(pred_battery_tesla)
    # print(entire_solar)
    # print(entire_home)
    # print(actual_grid)
    # print(modeled_grid)
    # print(actual_battery)

    #testing results
    print("RESULTS:")

    # battery_level_from_forecasted = [round(item / (batterySize/1000), 2)*100 for item in battery_level_from_forecasted] #convert to battery percentage
    # print(battery_level_from_forecasted)
    # print(weekly_best_times)





    


